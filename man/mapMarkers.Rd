% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-plotdata-map-markers.R
\name{mapMarkers}
\alias{mapMarkers}
\title{Map Markers data file}
\usage{
mapMarkers(
  data,
  variables,
  value = c("count", "proportion"),
  viewport = NULL,
  xValues = NULL,
  evilMode = c("noVariables", "allVariables", "strataVariables"),
  verbose = c(TRUE, FALSE)
)
}
\arguments{
\item{data}{data.frame to make plot-ready data for}

\item{variables}{veupathUtils::VariableMetadataList}

\item{value}{String indicating how to calculate y-values ('count', 'proportion')}

\item{viewport}{List of values indicating the visible range of data}

\item{xValues}{character vector providing overlay values of interest}

\item{evilMode}{String indicating how evil this plot is ('strataVariables', 'allVariables', 'noVariables')}

\item{verbose}{boolean indicating if timed logging is desired}
}
\value{
character name of json file containing plot-ready data
}
\description{
This function returns the name of a json file containing 
plot-ready data with one row per panel. Columns 
'label' and 'value' contain the raw data for plotting. Column 
'panel' specifies the facet panel the series data belongs to.
There are two options to calculate y-values for plotting. \cr
1) 'count' occurrences of values from data.table input \cr 
2) 'proportion' of occurrences of values from data.table input \cr
}
\section{Evil Mode}{

An `evilMode` exists. It will do the following: \cr
- when `strataVariables` it will return 'no data' as a regular value for strata vars but will discard such cases for the axes vars. \cr
- when `allVariables` it will return 'no data' as a regular value for all variables. \cr
- when `noVariables` it will do the sensible thing and return complete cases only. \cr
- not return statsTables \cr
- allow smoothed means and agg values etc over axes values where we have no data for the strata vars \cr
- return a total count of plotted incomplete cases \cr
- represent missingness poorly, conflate the stories of completeness and missingness, mislead you and steal your soul \cr
}

\section{Geolocation Viewport Structure}{

This is a list of lists taking the form: \cr
*latitude \cr
**xMin = numeric \cr
**xMax = numeric \cr
*longitude \cr
**left = numeric \cr
**right = numeric \cr
}

\examples{
# Construct example data
df <- data.table('entity.xvar' = sample(c('a','b','c'), 100, replace=T),
                 'entity.facet' = sample(c('red','green','blue'), 100, replace=T))

# Create VariableMetadataList that specifies variable role in the plot and supplies variable metadata
variables <- veupathUtils::VariableMetadataList(
  veupathUtils::VariableMetadata(
    variableClass = veupathUtils::VariableClass(value = 'native'),
    variableSpec = veupathUtils::VariableSpec(variableId = 'xvar', entityId = 'entity'),
    plotReference = veupathUtils::PlotReference(value = 'xAxis'),
    dataType = veupathUtils::DataType(value = 'STRING'),
    dataShape = veupathUtils::DataShape(value = 'CATEGORICAL')
  ),
  veupathUtils::VariableMetadata(
    variableClass = veupathUtils::VariableClass(value = 'native'),
    variableSpec = veupathUtils::VariableSpec(variableId = 'facet', entityId = 'entity'),
    plotReference = veupathUtils::PlotReference(value = 'geo'),
    dataType = veupathUtils::DataType(value = 'STRING'),
    dataShape = veupathUtils::DataShape(value = 'CATEGORICAL')
  )
)

# Returns the name of a json file
mapMarkers(df,map,value='count')
}
