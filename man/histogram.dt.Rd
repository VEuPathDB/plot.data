% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-plotdata-histogram.R
\name{histogram.dt}
\alias{histogram.dt}
\title{Histogram as data.table}
\usage{
histogram.dt(
  data,
  map,
  binWidth = NULL,
  value = c("count", "proportion"),
  binReportValue = c("binWidth", "numBins"),
  barmode = c("stack", "overlay"),
  viewport = NULL,
  evilMode = c(FALSE, TRUE),
  verbose = c(TRUE, FALSE)
)
}
\arguments{
\item{data}{data.frame to make plot-ready data for}

\item{map}{data.frame with at least two columns (id, plotRef) indicating a variable sourceId and its position in the plot. Recognized plotRef values are 'xAxisVariable', 'overlayVariable', 'facetVariable1' and 'facetVariable2'}

\item{binWidth}{numeric value indicating width of bins, character (ex: 'year') if xaxis is a date}

\item{value}{String indicating how to calculate y-values ('count, 'proportion')}

\item{binReportValue}{String indicating if number of bins or bin width used should be returned}

\item{barmode}{String indicating if bars should be stacked or overlaid ('stack', 'overlay')}

\item{viewport}{List of min and max values to consider as the range of data}

\item{evilMode}{boolean indicating whether to represent missingness in evil mode.}

\item{verbose}{boolean indicating if timed logging is desired}
}
\value{
data.table plot-ready data
}
\description{
This function returns a data.table of 
plot-ready data with one row per group (per panel). Columns 
'x' and 'y' contain the bin label and count respectively. 
Column 'group' and 'panel' specify the group the series data 
belongs to. It is possible to plot missingness in the stratification variables as an explicit 'No data' value using `evilMode`.
}
\section{Evil Mode}{

An `evilMode` exists. It will do the following: \cr
- return 'No data' as a regular value for strata vars but will discard incomplete cases for the axes vars \cr
- not return statsTables \cr
- allow smoothed means and agg values etc over axes values where we have no data for the strata vars \cr
- return a total count of plotted incomplete cases \cr
- represent missingness poorly, conflate the stories of completeness and missingness, mislead you and steal your soul \cr
}

\section{Map Structure}{

The 'map' associates columns in the data with plot elements, as well as passes information about each variable relevant for plotting. Specifically, the `map` argument is a data.frame with the following columns: \cr
- id: the variable name. Must match column name in the data exactly. \cr
- plotRef: The plot element to which that variable will be mapped. Options are 'xAxisVariable', 'yAxisVariable', 'zAxisVariable', 'overlayVariable', 'facetVariable1', 'facetVariable2'.  \cr
- dataType: Options are 'NUMBER', 'INTEGER', 'STRING', or 'DATE'. Optional. \cr
- dataShape: Options are 'CONTINUOUS', 'CATEGORICAL', 'ORDINAL', 'BINARY. Optional. \cr
}

\examples{
# Construct example data
df <- data.table('xvar' = rnorm(100),
                 'overlay' = sample(c('red','green','blue'), 100, replace=T), stringsAsFactors = F)

# Create map that specifies variable role in the plot and supplies variable metadata
map <- data.frame('id' = c('xvar', 'overlay'),
                 'plotRef' = c('xAxisVariable', 'overlayVariable'),
                 'dataType' = c('NUMBER', 'STRING'),
                 'dataShape' = c('CONTINUOUS', 'CATEGORICAL'), stringsAsFactors=FALSE)

viewport <- list('xMin'=min(df$xvar), 'xMax'=max(df$xvar))

# Returns a data table with plot-ready data
dt <- histogram.dt(df, map, binWidth=0.3, value='count', barmode='stack', viewport=viewport)
}
